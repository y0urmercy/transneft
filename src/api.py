import os
import sys
from flask import Flask, request, jsonify
from flask_cors import CORS

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
current_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, current_dir)

from core.qa_system import TransneftQASystem

app = Flask(__name__)
CORS(app)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã
qa_system = None


def init_system():
    global qa_system
    try:
        print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è QA —Å–∏—Å—Ç–µ–º—ã...")
        qa_system = TransneftQASystem()
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞!")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False


@app.route('/')
def home():
    return """
    <h1>Transneft QA Bot API</h1>
    <p>–î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:</p>
    <ul>
        <li><a href="/health">GET /health</a> - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è</li>
        <li><a href="/ask?q=–≤–∞—à –≤–æ–ø—Ä–æ—Å">GET /ask?q=–≤–æ–ø—Ä–æ—Å</a> - –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å</li>
        <li>POST /ask - {"question": "–≤–∞—à –≤–æ–ø—Ä–æ—Å"}</li>
        <li><a href="/chat?message=–≤–∞—à –≤–æ–ø—Ä–æ—Å">GET /chat?message=–≤–æ–ø—Ä–æ—Å</a> - —á–∞—Ç</li>
        <li>POST /chat - {"message": "–≤–∞—à –≤–æ–ø—Ä–æ—Å"}</li>
    </ul>
    """


@app.route('/health')
def health():
    return jsonify({"status": "healthy", "service": "Transneft QA Bot"})


@app.route('/ask', methods=['GET', 'POST'])
def ask():
    if request.method == 'GET':
        question = request.args.get('q', '').strip()
    else:
        data = request.get_json()
        question = data.get('question', '').strip() if data else ''

    if not question:
        return jsonify({"error": "–í–æ–ø—Ä–æ—Å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º"}), 400

    if not qa_system:
        return jsonify({"error": "–°–∏—Å—Ç–µ–º–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞"}), 500

    try:
        answer = qa_system.answer_question(question)
        return jsonify({
            "question": question,
            "answer": answer,
            "success": True
        })
    except Exception as e:
        return jsonify({"error": str(e)}), 500


@app.route('/chat', methods=['GET', 'POST'])
def chat():
    if request.method == 'GET':
        message = request.args.get('message', '').strip()
    else:
        data = request.get_json()
        message = data.get('message', '').strip() if data else ''

    if not message:
        return jsonify({"reply": "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å"})

    if not qa_system:
        return jsonify({"reply": "–°–∏—Å—Ç–µ–º–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"})

    try:
        answer = qa_system.answer_question(message)
        return jsonify({
            "reply": answer,
            "question": message
        })
    except Exception as e:
        return jsonify({"reply": "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–æ–ø—Ä–æ—Å–∞"})


if __name__ == '__main__':
    if init_system():
        print("üåê API –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:5000")
        print("üìñ –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:5000")
        app.run(host='0.0.0.0', port=5000, debug=False)
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å API")