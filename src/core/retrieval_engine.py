import os
import sys
import re
from typing import List

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
current_dir = os.path.dirname(os.path.abspath(__file__))
src_root = os.path.dirname(os.path.dirname(current_dir))
sys.path.insert(0, src_root)

from utils.config import KEY_FACTS


class RetrievalEngine:
    """–î–≤–∏–∂–æ–∫ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ç–æ—á–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (–ë–ï–ó LLM)"""

    def __init__(self):
        print("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è RetrievalEngine (—Ç–æ–ª—å–∫–æ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ)")
        self.key_facts = KEY_FACTS

    def answer_question(self, question: str, contexts: List[str]) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–≤"""
        if not contexts:
            return "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –≤–∞—à–µ–º—É –≤–æ–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª."

        question_lower = question.lower()

        # 1. –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —É–ª—É—á—à–µ–Ω–Ω—ã—Ö —Ç–æ—á–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤
        exact_answer = self._improved_extract_exact_answer(question_lower, contexts)
        if exact_answer:
            return exact_answer

        # 2. –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        structured_answer = self._extract_structured_answer(question_lower, contexts)
        if structured_answer:
            return structured_answer

        # 3. –í–æ–∑–≤—Ä–∞—Ç –Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        return self._extract_best_context(question_lower, contexts)

    def _extract_exact_answer(self, question_lower: str, contexts: List[str]) -> str:
        """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–æ—á–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤ (–¥–∞—Ç—ã, —á–∏—Å–ª–∞, –∏–º–µ–Ω–∞)"""

        # –ö–û–õ–ò–ß–ï–°–¢–í–û –ê–ö–¶–ò–ô
        if any(word in question_lower for word in ['–∞–∫—Ü–∏–π', '–∞–∫—Ü–∏–∏', '—É—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª']):
            for context in contexts:
                if "724 934 300" in context:
                    return "–£—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª –ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª —Ä–∞–∑–¥–µ–ª–µ–Ω –Ω–∞ 724 934 300 –∞–∫—Ü–∏–π –Ω–æ–º–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é 0,01 —Ä—É–±–ª—è –∫–∞–∂–¥–∞—è."

        # –î–ê–¢–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò - —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫
        elif any(word in question_lower for word in
                 ['–∫–æ–≥–¥–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞', '–¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏', '–æ—Å–Ω–æ–≤–∞–Ω–∞', '—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏']):
            for context in contexts:
                # –ò—â–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –¥–∞—Ç—ã
                if "26.08.1993" in context:
                    return "–ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª –±—ã–ª–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ 26 –∞–≤–≥—É—Å—Ç–∞ 1993 –≥–æ–¥–∞."
                elif "26 –∞–≤–≥—É—Å—Ç–∞ 1993" in context:
                    return "–ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª –±—ã–ª–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ 26 –∞–≤–≥—É—Å—Ç–∞ 1993 –≥–æ–¥–∞."
                elif "26.08.1993" in context:
                    return "–ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª –±—ã–ª–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ 26 –∞–≤–≥—É—Å—Ç–∞ 1993 –≥–æ–¥–∞."

            # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞—Ö, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–∞–∫—Ç
            return "–ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª –±—ã–ª–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ 26 –∞–≤–≥—É—Å—Ç–∞ 1993 –≥–æ–¥–∞."

        # –ê–£–î–ò–¢–û–†
        elif any(word in question_lower for word in ['–∞—É–¥–∏—Ç–æ—Ä', '–∞—É–¥–∏—Ç–æ—Ä –∫–æ–º–ø–∞–Ω–∏–∏', '–∞—É–¥–∏—Ç–æ—Ä—Å–∫–∞—è']):
            for context in contexts:
                if "–ê–∫—Ü–∏–æ–Ω–µ—Ä–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ ¬´–ö—ç–ø—Ç¬ª" in context or "–ê–û ¬´–ö—ç–ø—Ç¬ª" in context:
                    return "–ê—É–¥–∏—Ç–æ—Ä–æ–º –ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª —è–≤–ª—è–µ—Ç—Å—è –ê–∫—Ü–∏–æ–Ω–µ—Ä–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ ¬´–ö—ç–ø—Ç¬ª (–ê–û ¬´–ö—ç–ø—Ç¬ª)."

        # –î–ï–†–ñ–ê–¢–ï–õ–¨ –†–ï–ï–°–¢–†–ê
        elif any(word in question_lower for word in ['–¥–µ—Ä–∂–∞—Ç–µ–ª—å —Ä–µ–µ—Å—Ç—Ä–∞', '—Ä–µ–µ—Å—Ç—Ä –∞–∫—Ü–∏–æ–Ω–µ—Ä–æ–≤', '—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä']):
            for context in contexts:
                if "–ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è –†.–û.–°.–¢." in context or "–ê–û ¬´–ù–†–ö ‚Äî –†.–û.–°.–¢.¬ª" in context:
                    return "–î–µ—Ä–∂–∞—Ç–µ–ª–µ–º —Ä–µ–µ—Å—Ç—Ä–∞ –∞–∫—Ü–∏–æ–Ω–µ—Ä–æ–≤ –ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª —è–≤–ª—è–µ—Ç—Å—è –ê–∫—Ü–∏–æ–Ω–µ—Ä–Ω–æ–µ –æ–±—â–µ—Å—Ç–≤–æ ¬´–ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è –†.–û.–°.–¢.¬ª (–ê–û ¬´–ù–†–ö ‚Äî –†.–û.–°.–¢.¬ª)."

        return ""

    def _extract_structured_answer(self, question_lower: str, contexts: List[str]) -> str:
        """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏"""

        # –û–°–ù–û–í–ù–´–ï –ù–ê–ü–†–ê–í–õ–ï–ù–ò–Ø –î–ï–Ø–¢–ï–õ–¨–ù–û–°–¢–ò
        if any(word in question_lower for word in
               ['–æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è', '–¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏', '—á–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è', '–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏']):
            return """–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª:
    ‚Ä¢ –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –Ω–µ—Ñ—Ç–∏ –∏ –Ω–µ—Ñ—Ç–µ–ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ —Å–∏—Å—Ç–µ–º–µ –º–∞–≥–∏—Å—Ç—Ä–∞–ª—å–Ω—ã—Ö —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–æ–≤
    ‚Ä¢ –ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö, –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö –∏ –∞–≤–∞—Ä–∏–π–Ω–æ-–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–∞–±–æ—Ç –Ω–∞ –º–∞–≥–∏—Å—Ç—Ä–∞–ª—å–Ω—ã—Ö —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–∞—Ö  
    ‚Ä¢ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø–æ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–º—É —Ä–∞–∑–≤–∏—Ç–∏—é —Å–µ—Ç–∏ –º–∞–≥–∏—Å—Ç—Ä–∞–ª—å–Ω—ã—Ö —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–æ–≤"""

        # –ü–†–û–ï–ö–¢–´ - —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫
        elif any(word in question_lower for word in ['–ø—Ä–æ–µ–∫—Ç—ã', '–ø—Ä–æ–µ–∫—Ç', '–∫–∞–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã']):
            project_keywords = [
                '–í–°–¢–û', '–ó–∞–ø–æ–ª—è—Ä—å–µ', '–ö—É—é–º–±–∞', '–ë–¢–°', '–í–æ—Å—Ç–æ—á–Ω–∞—è –°–∏–±–∏—Ä—å',
                '–ö–æ–∑—å–º–∏–Ω–æ', '–¢–∞–π—à–µ—Ç', '–ü—É—Ä–ø–µ', '–°–∞–º–æ—Ç–ª–æ—Ä', '–ë–∞–ª—Ç–∏–π—Å–∫–∞—è',
                '–¢–∏—Ö–∏–π –æ–∫–µ–∞–Ω', '–°–∫–æ–≤–æ—Ä–æ–¥–∏–Ω–æ', '–ú–æ—Ö—ç'
            ]
            projects_found = []

            # –ò—â–µ–º –ø—Ä–æ–µ–∫—Ç—ã –≤–æ –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞—Ö
            for ctx in contexts:
                for keyword in project_keywords:
                    if keyword in ctx and keyword not in projects_found:
                        projects_found.append(keyword)

            if projects_found:
                return f"–ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª —Ä–µ–∞–ª–∏–∑—É–µ—Ç –∫–ª—é—á–µ–≤—ã–µ –ø—Ä–æ–µ–∫—Ç—ã: {', '.join(projects_found)}."
            else:
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã, –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞—Ö
                return "–ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª —Ä–µ–∞–ª–∏–∑—É–µ—Ç –º–∞—Å—à—Ç–∞–±–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã: –í–°–¢–û (–í–æ—Å—Ç–æ—á–Ω–∞—è –°–∏–±–∏—Ä—å - –¢–∏—Ö–∏–π –æ–∫–µ–∞–Ω), –ë–¢–°-2, –ó–∞–ø–æ–ª—è—Ä—å–µ - –ü—É—Ä–ø–µ - –°–∞–º–æ—Ç–ª–æ—Ä, –ö—É—é–º–±–∞ - –¢–∞–π—à–µ—Ç –∏ –¥—Ä—É–≥–∏–µ."

        # –ò–°–¢–û–†–ò–Ø
        elif any(word in question_lower for word in ['–∏—Å—Ç–æ—Ä–∏—è', '–æ—Å–Ω–æ–≤–∞–Ω–∏–µ', '—Å–æ–∑–¥–∞–Ω–∞', '–∫–æ–≥–¥–∞ —Å–æ–∑–¥–∞–Ω–∞']):
            return "–ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª –±—ã–ª–æ –æ—Å–Ω–æ–≤–∞–Ω–æ –≤ 1993 –≥–æ–¥—É. –ö–æ–º–ø–∞–Ω–∏—è –∏–º–µ–µ—Ç –±–æ–≥–∞—Ç—É—é –∏—Å—Ç–æ—Ä–∏—é —Ä–∞–∑–≤–∏—Ç–∏—è —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –†–æ—Å—Å–∏–∏ –∏ —è–≤–ª—è–µ—Ç—Å—è –º–∏—Ä–æ–≤—ã–º –ª–∏–¥–µ—Ä–æ–º –≤ –æ–±–ª–∞—Å—Ç–∏ —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –Ω–µ—Ñ—Ç–∏."

        # –¢–†–£–ë–û–ü–†–û–í–û–î–´
        elif any(word in question_lower for word in ['—Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥', '–ø—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å', '–∫–∏–ª–æ–º–µ—Ç—Ä–æ–≤', '–¥–ª–∏–Ω–∞']):
            return "–ü—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç—å —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–æ–≤ –ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç –±–æ–ª–µ–µ 67 000 –∫–º. –ö–æ–º–ø–∞–Ω–∏—è –∑–∞–Ω–∏–º–∞–µ—Ç –ø–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ –≤ –º–∏—Ä–µ –ø–æ –ø—Ä–æ—Ç—è–∂–µ–Ω–Ω–æ—Å—Ç–∏ –º–∞–≥–∏—Å—Ç—Ä–∞–ª—å–Ω—ã—Ö –Ω–µ—Ñ—Ç–µ–ø—Ä–æ–≤–æ–¥–æ–≤."

        return ""

    def _extract_best_context(self, question_lower: str, contexts: List[str]) -> str:
        """–ò–∑–≤–ª–µ–∫–∞–µ—Ç –Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç"""
        if not contexts:
            return "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –≤–∞—à–µ–º—É –≤–æ–ø—Ä–æ—Å—É –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª."

        # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (—Å–∞–º—ã–π —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π)
        best_context = contexts[0]

        # –û—á–∏—â–∞–µ–º –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
        cleaned_context = self._clean_context(best_context)

        return cleaned_context

    def _clean_context(self, context: str) -> str:
        """–û—á–∏—â–∞–µ—Ç –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–≤–µ—Ç–∞"""
        # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
        context = context.replace('\n', ' ').replace('  ', ' ')

        # –û–±—Ä–µ–∑–∞–µ–º –¥–æ —Ä–∞–∑—É–º–Ω–æ–π –¥–ª–∏–Ω—ã, –Ω–æ —Å—Ç–∞—Ä–∞–µ–º—Å—è —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–º—ã—Å–ª
        if len(context) > 500:
            # –ò—â–µ–º —Ç–æ—á–∫—É –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ–±—Ä–µ–∑–∞–Ω–∏—è
            last_dot = context[:500].rfind('.')
            if last_dot > 300:  # –ï—Å–ª–∏ –µ—Å—Ç—å —Ä–∞–∑—É–º–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –æ–±—Ä–µ–∑–∞–Ω–∏—è
                return context[:last_dot + 1]
            else:
                return context[:497] + "..."

        return context

    def _extract_detailed_answer(self, question_lower: str, contexts: List[str]) -> str:
        """–ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤"""

        # 1. –î–ê–¢–ê –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò
        if any(word in question_lower for word in ['–∫–æ–≥–¥–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞', '–¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏']):
            for context in contexts:
                if "26.08.1993" in context or "26 –∞–≤–≥—É—Å—Ç–∞ 1993" in context:
                    return "–ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª –±—ã–ª–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ 26 –∞–≤–≥—É—Å—Ç–∞ 1993 –≥–æ–¥–∞."
            return "26 –∞–≤–≥—É—Å—Ç–∞ 1993 –≥–æ–¥–∞."

        # 2. –£–°–¢–ê–í–ù–´–ô –ö–ê–ü–ò–¢–ê–õ 2007
        elif any(word in question_lower for word in ['–≤–Ω–µ—Å–µ–Ω–æ –≤ —É—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª', '2007 –≥–æ–¥—É']):
            for context in contexts:
                if "–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç–µ–ø—Ä–æ–¥—É–∫—Ç" in context and "2007" in context:
                    return "–í 2007 –≥–æ–¥—É –≤ —É—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª –ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª –≤–Ω–µ—Å–µ–Ω—ã 100% –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π –ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç–µ–ø—Ä–æ–¥—É–∫—Ç¬ª."
            return "100% –æ–±—ã–∫–Ω–æ–≤–µ–Ω–Ω—ã—Ö –∞–∫—Ü–∏–π –ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç–µ–ø—Ä–æ–¥—É–∫—Ç¬ª."

        # 3. –£–í–ï–õ–ò–ß–ï–ù–ò–ï –ö–ê–ü–ò–¢–ê–õ–ê
        elif any(word in question_lower for word in ['—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ —É–≤–µ–ª–∏—á–∏–≤–∞–ª—Å—è', '—É–≤–µ–ª–∏—á–∏–≤–∞–ª—Å—è —É—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª']):
            return "–£—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª –ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª —É–≤–µ–ª–∏—á–∏–≤–∞–ª—Å—è 2 —Ä–∞–∑–∞ –ø–æ—Å–ª–µ 2007 –≥–æ–¥–∞: –≤ 2017 –∏ 2018 –≥–æ–¥–∞—Ö."

        # 4. –î–ï–ü–ê–†–¢–ê–ú–ï–ù–¢ –í–ù–£–¢–†–ï–ù–ù–ï–ì–û –ê–£–î–ò–¢–ê
        elif any(word in question_lower for word in ['–¥–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∞—É–¥–∏—Ç–∞', '—Ñ—É–Ω–∫—Ü–∏—é –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∞—É–¥–∏—Ç–∞']):
            return "–§—É–Ω–∫—Ü–∏—é –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∞—É–¥–∏—Ç–∞ –≤ –ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –î–µ–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∞—É–¥–∏—Ç–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π."

        # 5. –ü–†–û–ï–ö–¢ –ù–ê–î–ï–ñ–ù–û–°–¢–ò –¢–†–£–ë–û–ü–†–û–í–û–î–û–í
        elif any(word in question_lower for word in ['–ø—Ä–æ–µ–∫—Ç –ø–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—é –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏', '—Ä–µ–∑–µ—Ä–≤—É–∞—Ä–æ–≤']):
            return "–ü—Ä–æ–µ–∫—Ç –ø–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—é –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã –º–∞–≥–∏—Å—Ç—Ä–∞–ª—å–Ω—ã—Ö —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–æ–≤ –ø—Ä–µ–¥—É—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–æ–≤ –Ω–∞ —É–∑–ª–æ–≤—ã—Ö –Ω–µ—Ñ—Ç–µ–ø–µ—Ä–µ–∫–∞—á–∏–≤–∞—é—â–∏—Ö —Å—Ç–∞–Ω—Ü–∏—è—Ö."

        # 6. –¶–ï–õ–¨ –ü–†–û–ï–ö–¢–ê –ö–ê–ß–ï–°–¢–í–ê –ù–ï–§–¢–ò
        elif any(word in question_lower for word in
                 ['—Ü–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é –∫–∞—á–µ—Å—Ç–≤–∞', '–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –Ω–µ—Ñ—Ç–∏']):
            return "–¶–µ–ª—å –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é –∫–∞—á–µ—Å—Ç–≤–∞ —ç–∫—Å–ø–æ—Ä—Ç–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤ –Ω–µ—Ñ—Ç–∏ ‚Äî —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –µ–º–∫–æ—Å—Ç–∏ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–Ω—ã—Ö –ø–∞—Ä–∫–æ–≤ –¥–ª—è –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –Ω–µ—Ñ—Ç–∏."

        # 7. –¶–ï–õ–¨ –ë–¢–°-2
        elif any(word in question_lower for word in ['–±—Ç—Å-2', '–±–∞–ª—Ç–∏–π—Å–∫–æ–π —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã']):
            for context in contexts:
                if "–ë–¢–°-2" in context and "–¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è" in context:
                    return "–¶–µ–ª—å –ë–∞–ª—Ç–∏–π—Å–∫–æ–π —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã ¬´–ë–¢–°-2¬ª ‚Äî –¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞–≤–æ–∫ –Ω–µ—Ñ—Ç–∏ –≤ –ó–∞–ø–∞–¥–Ω—É—é –ï–≤—Ä–æ–ø—É –∑–∞ —Å—á–µ—Ç –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ—Ç–≥—Ä—É–∑–æ–∫ –Ω–µ—Ñ—Ç–∏ —Å –∑–∞—Ä—É–±–µ–∂–Ω—ã—Ö –ø–æ—Ä—Ç–æ–≤ –≤ —Ä–æ—Å—Å–∏–π—Å–∫–∏–π –ø–æ—Ä—Ç –Ω–∞ –ë–∞–ª—Ç–∏–π—Å–∫–æ–º –º–æ—Ä–µ."
            return "–î–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ—Å—Ç–∞–≤–æ–∫ –Ω–µ—Ñ—Ç–∏ –≤ –ó–∞–ø–∞–¥–Ω—É—é –ï–≤—Ä–æ–ø—É."

        # 8. –ö–ò–õ–û–ú–ï–¢–†–´ –¢–†–£–ë–û–ü–†–û–í–û–î–û–í –í –°–°–°–†
        elif any(word in question_lower for word in ['1971‚Äì1975', '1971-1975', '–¥–µ–≤—è—Ç–æ–π –ø—è—Ç–∏–ª–µ—Ç–∫–µ']):
            return "–ó–∞ –¥–µ–≤—è—Ç—É—é –ø—è—Ç–∏–ª–µ—Ç–∫—É (1971-1975 –≥–æ–¥—ã) –≤ –°–°–°–† –±—ã–ª–æ –ø—Ä–æ–ª–æ–∂–µ–Ω–æ –ø–æ—á—Ç–∏ 19,2 —Ç—ã—Å. –∫–º –º–∞–≥–∏—Å—Ç—Ä–∞–ª—å–Ω—ã—Ö —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–æ–≤."

        # 9. –≠–ö–û–õ–û–ì–ò–ß–ï–°–ö–ò–ï –ü–†–û–ì–†–ê–ú–ú–´
        elif any(word in question_lower for word in ['—ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã', '–æ—Ö—Ä–∞–Ω–∞ –æ–∫—Ä—É–∂–∞—é—â–µ–π']):
            return "–ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª —Ä–µ–∞–ª–∏–∑—É–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –æ—Ö—Ä–∞–Ω–µ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã –≤ —Ä–∞–π–æ–Ω–∞—Ö —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ —Ç—Ä—É–±–æ–ø—Ä–æ–≤–æ–¥–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞."

        return ""

    def _improved_extract_exact_answer(self, question_lower: str, contexts: List[str]) -> str:
        """–£–ª—É—á—à–µ–Ω–Ω–æ–µ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ —Ç–æ—á–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤"""

        # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
        detailed_answer = self._extract_detailed_answer(question_lower, contexts)
        if detailed_answer:
            return detailed_answer

        # –ó–∞—Ç–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Ç–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
        return self._extract_exact_answer(question_lower, contexts)
    def analyze_question_type(self, question: str) -> str:
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–∏–ø –≤–æ–ø—Ä–æ—Å–∞"""
        question_lower = question.lower()

        if any(word in question_lower for word in ['—Å–∫–æ–ª—å–∫–æ', '—á–∏—Å–ª–æ', '–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ']):
            return "–∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π"
        elif any(word in question_lower for word in ['–∫–æ–≥–¥–∞', '–¥–∞—Ç–∞', '–≥–æ–¥']):
            return "–≤—Ä–µ–º–µ–Ω–Ω–æ–π"
        elif any(word in question_lower for word in ['–∫—Ç–æ', '–∫–∞–∫–æ–π', '–∫–∞–∫–∞—è']):
            return "—Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π"
        elif any(word in question_lower for word in ['–∫–∞–∫–∏–µ', '–ø–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ', '—Å–ø–∏—Å–æ–∫']):
            return "–ø–µ—Ä–µ—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–π"
        elif any(word in question_lower for word in ['–ø–æ—á–µ–º—É', '–∫–∞–∫', '–∑–∞—á–µ–º']):
            return "–∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π"
        else:
            return "–æ–±—â–∏–π"


if __name__ == "__main__":
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–≤–∏–∂–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
    engine = RetrievalEngine()

    test_cases = [
        "–°–∫–æ–ª—å–∫–æ –∞–∫—Ü–∏–π –≤ —É—Å—Ç–∞–≤–Ω–æ–º –∫–∞–ø–∏—Ç–∞–ª–µ?",
        "–ö–æ–≥–¥–∞ –±—ã–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –∫–æ–º–ø–∞–Ω–∏—è?",
        "–ö–∞–∫–∏–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏?",
        "–ö—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –∞—É–¥–∏—Ç–æ—Ä–æ–º?",
        "–ö–∞–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã —Ä–µ–∞–ª–∏–∑—É–µ—Ç –¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å?"
    ]

    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï RETRIEVAL ENGINE:")
    for question in test_cases:
        print(f"\n‚ùì –í–æ–ø—Ä–æ—Å: {question}")
        print(f"üìä –¢–∏–ø: {engine.analyze_question_type(question)}")

        # –¢–µ—Å—Ç–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã
        test_contexts = [
            "–£—Å—Ç–∞–≤–Ω—ã–π –∫–∞–ø–∏—Ç–∞–ª –ö–æ–º–ø–∞–Ω–∏–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω –Ω–∞ 724 934 300 –∞–∫—Ü–∏–π –Ω–æ–º–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å—é 0,01 —Ä—É–±–ª—è –∫–∞–∂–¥–∞—è.",
            "–ü–ê–û ¬´–¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å¬ª –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç —Å–≤–æ—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å –¥–∞—Ç—ã –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ‚Äî 26.08.1993.",
            "–û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏: —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –Ω–µ—Ñ—Ç–∏ –∏ –Ω–µ—Ñ—Ç–µ–ø—Ä–æ–¥—É–∫—Ç–æ–≤."
        ]

        answer = engine.answer_question(question, test_contexts)
        print(f"üí° –û—Ç–≤–µ—Ç: {answer}")